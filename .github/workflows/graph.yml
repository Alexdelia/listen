name: graph

on:
  schedule:
    - cron: "42 18 * * *"

env:
  COMMIT_MESSAGE: "ðŸ“ˆ update `history.svg` - [Skip Github Action]"

jobs:
  should_run:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_commit.outputs.run_job }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check last commit
        id: check_commit
        run: |
          if [ "$(git log -1 --pretty=format:%s)" == "$COMMIT_MESSAGE" ]; then
            echo "run_job=false" >> $GITHUB_OUTPUT
          else
            echo "run_job=true" >> $GITHUB_OUTPUT
          fi

  run:
    name: graph

    needs: should_run
    if: ${{ needs.should_run.outputs.run_job == 'true' }}

    runs-on: ubuntu-latest

    timeout-minutes: 2

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: install dependencies
        run: pip install matplotlib

      - name: generate graph
        run: ./graph.py

      - name: commit
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add history.svg
          git commit -m "${COMMIT_MESSAGE}"
          git push
